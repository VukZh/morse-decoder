const MORSE_TABLE = {
    '.-': 'a',
    '-...': 'b',
    '-.-.': 'c',
    '-..': 'd',
    '.': 'e',
    '..-.': 'f',
    '--.': 'g',
    '....': 'h',
    '..': 'i',
    '.---': 'j',
    '-.-': 'k',
    '.-..': 'l',
    '--': 'm',
    '-.': 'n',
    '---': 'o',
    '.--.': 'p',
    '--.-': 'q',
    '.-.': 'r',
    '...': 's',
    '-': 't',
    '..-': 'u',
    '...-': 'v',
    '.--': 'w',
    '-..-': 'x',
    '-.--': 'y',
    '--..': 'z',
    '.----': '1',
    '..---': '2',
    '...--': '3',
    '....-': '4',
    '.....': '5',
    '-....': '6',
    '--...': '7',
    '---..': '8',
    '----.': '9',
    '-----': '0',
};

const decodeMap = new Map();
decodeMap
    .set("0000001011", "a")
    .set("0011101010", "b")
    .set("0011101110", "c")
    .set("0000111010", "d")
    .set("0000000010", "e")
    .set("0010101110", "f")
    .set("0000111110", "g")
    .set("0010101010", "h")
    .set("0000001010", "i")
    .set("0010111111", "j")
    .set("0000111011", "k")
    .set("0010111010", "l")
    .set("0000001111", "m")
    .set("0000001110", "n")
    .set("0000111111", "o")
    .set("0010111110", "p")
    .set("0011111011", "q")
    .set("0000101110", "r")
    .set("0000101010", "s")
    .set("0000000011", "t")
    .set("0000101011", "u")
    .set("0010101011", "v")
    .set("0000101111", "w")
    .set("0011101011", "x")
    .set("0011101111", "y")
    .set("0011111010", "z")
    .set("1011111111", "1")
    .set("1010111111", "2")
    .set("1010101111", "3")
    .set("1010101011", "4")
    .set("1010101010", "5")
    .set("1110101010", "6")
    .set("1111101010", "7")
    .set("1111111010", "8")
    .set("1111111110", "9")
    .set("1111111111", "0")
    .set("**********", " ");



function decode(expr) {
    let res = "";
    for (let i = 0; i < (expr.length / 10); i++) {
        let currentSubstr = expr.substr(i * 10, 10);
        // console.log(i + " - " + currentSubstr);
        res = res + decodeMap.get(currentSubstr);
    }
    // console.log ("Len --- " + expr/10);
    return res;
}

module.exports = {
    decode
}